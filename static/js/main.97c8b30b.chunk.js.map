{"version":3,"sources":["config.js","services/services.js","trendingList/components/TrendingItemCard.js","trendingList/TrendingList.js","App.js","reportWebVitals.js","index.js"],"names":["dotenv","config","apiToken","process","baseURL","endpoints","imageBaseURL","imdbTitleURL","youtube","movieList","tvList","tvShow","movie","movieGenre","tvGenre","defaultIcon","notFoundImage","headers","Authorization","fetchMovieList","a","data","axios","get","then","res","results","catch","error","fetchTVList","fetchMovie","movieId","pinterpolate","fetchTVShows","tvId","fetchMovieGenre","genres","fetchTVGenre","TrendingItemCard","props","title","voteAverage","posterPath","id","mediaType","genre","imageUrl","handleTitleOnClick","window","open","imdb_id","homepage","youtubeSearch","URL","searchParams","set","Card","className","style","backgroundColor","onClick","src","map","g","name","handleTrailerOnClick","TrendingList","trendingMovieList","trendingTVList","Grid","container","sm","item","vote_average","backdrop_path","media_type","App","useState","setTrendingMovieList","setTrendingTVList","isError","setIsError","addGenreNames","listData","genre_ids","find","t","services","movieGenres","tvGenres","movieData","tvData","console","log","useEffect","fetchTrendingList","textAlign","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.97c8b30b.chunk.js","sourcesContent":["import dotenv from \"dotenv\";\r\n\r\ndotenv.config();\r\n\r\nconst config = {\r\n  apiToken: process.env.REACT_APP_AUTH_TOKEN,\r\n  baseURL: process.env.REACT_APP_API_BASE_URL,\r\n  endpoints: {\r\n    imageBaseURL: \"https://image.tmdb.org/t/p/w780\",\r\n    imdbTitleURL: \"https://www.imdb.com/title/\",\r\n    youtube: \"https://www.youtube.com/results/\",\r\n    movieList: \"discover/movie\",\r\n    tvList: \"discover/tv\",\r\n    tvShow: \"tv/:tvId\",\r\n    movie: \"movie/:movieId\",\r\n    movieGenre: \"genre/movie/list\",\r\n    tvGenre: \"genre/tv/list\",\r\n  },\r\n  defaultIcon:\r\n    \"https://upload.wikimedia.org/wikipedia/commons/1/16/LosslessCut_icon.svg\",\r\n  notFoundImage:\r\n    \"https://www.publicdomainpictures.net/pictures/280000/velka/not-found-image-15383864787lu.jpg\",\r\n};\r\n\r\nexport default config;\r\n","import axios from \"axios\";\r\nimport config from \"../config\";\r\nimport pinterpolate from \"pinterpolate\";\r\n\r\nconst headers = {\r\n  Authorization: \"Bearer \" + config.apiToken,\r\n};\r\n\r\n/**\r\n * Fetch trending movie list\r\n *\r\n * @returns {Array}\r\n */\r\nexport async function fetchMovieList() {\r\n  let data = [];\r\n  await axios\r\n    .get(config.baseURL + config.endpoints.movieList, { headers })\r\n    .then((res) => {\r\n      data = res.data.results;\r\n    })\r\n    .catch((error) => {\r\n      throw error;\r\n    });\r\n  return data;\r\n}\r\n\r\n/**\r\n * Fetch trending TV show list\r\n *\r\n * @returns {Array}\r\n */\r\nexport async function fetchTVList() {\r\n  let data = [];\r\n  await axios\r\n    .get(config.baseURL + config.endpoints.tvList, { headers })\r\n    .then((res) => {\r\n      data = res.data.results;\r\n    })\r\n    .catch((error) => {\r\n      throw error;\r\n    });\r\n  return data;\r\n}\r\n\r\n/**\r\n * Fetch movie details\r\n *\r\n * @param {Number} movieId\r\n * @returns {Object}\r\n */\r\nexport async function fetchMovie(movieId) {\r\n  let data = [];\r\n  await axios\r\n    .get(pinterpolate(config.baseURL + config.endpoints.movie, { movieId }), {\r\n      headers,\r\n    })\r\n    .then((res) => {\r\n      data = res.data;\r\n    })\r\n    .catch((error) => {\r\n      throw error;\r\n    });\r\n  return data;\r\n}\r\n\r\n/**\r\n * Fetch tv show details\r\n *\r\n * @param {Number} tvId\r\n * @returns {Object}\r\n */\r\nexport async function fetchTVShows(tvId) {\r\n  let data = [];\r\n  await axios\r\n    .get(pinterpolate(config.baseURL + config.endpoints.tvShow, { tvId }), {\r\n      headers,\r\n    })\r\n    .then((res) => {\r\n      data = res.data;\r\n    })\r\n    .catch((error) => {\r\n      throw error;\r\n    });\r\n  return data;\r\n}\r\n\r\n/**\r\n * Fetch movie genres\r\n *\r\n * @returns {Array}\r\n */\r\nexport async function fetchMovieGenre() {\r\n  let data = [];\r\n  await axios\r\n    .get(config.baseURL + config.endpoints.movieGenre, { headers })\r\n    .then((res) => {\r\n      data = res.data.genres;\r\n    })\r\n    .catch((error) => {\r\n      throw error;\r\n    });\r\n  return data;\r\n}\r\n\r\n/**\r\n * Fetch tv shows genres\r\n *\r\n * @returns {Array}\r\n */\r\nexport async function fetchTVGenre() {\r\n  let data = [];\r\n  await axios\r\n    .get(config.baseURL + config.endpoints.tvGenre, { headers })\r\n    .then((res) => {\r\n      data = res.data.genres;\r\n    })\r\n    .catch((error) => {\r\n      throw error;\r\n    });\r\n  return data;\r\n}\r\n","import React from \"react\";\r\nimport { Card } from \"@material-ui/core\";\r\n\r\nimport \"./TrendingItemCard.css\";\r\nimport config from \"../../config\";\r\nimport { fetchMovie, fetchTVShows } from \"../../services/services\";\r\n\r\nconst TrendingItemCard = (props) => {\r\n  const { title, voteAverage, posterPath, id, mediaType, genre } = props;\r\n\r\n  const imageUrl = config.endpoints.imageBaseURL + posterPath;\r\n\r\n  async function handleTitleOnClick(id) {\r\n    if (mediaType === \"movie\") {\r\n      const data = await fetchMovie(id);\r\n      window.open(config.endpoints.imdbTitleURL + data.imdb_id);\r\n    } else if (mediaType === \"tv\") {\r\n      const data = await fetchTVShows(id);\r\n      window.open(data.homepage);\r\n    }\r\n  }\r\n\r\n  async function handleTrailerOnClick() {\r\n    const youtubeSearch = new URL(config.endpoints.youtube);\r\n    youtubeSearch.searchParams.set(\"search_query\", title);\r\n    window.open(youtubeSearch);\r\n  }\r\n\r\n  return (\r\n    <Card className=\"card\" style={{ backgroundColor: \"#636060\" }}>\r\n      <img\r\n        className=\"thumbnail hover-pointer\"\r\n        onClick={() => handleTitleOnClick(id)}\r\n        src={imageUrl || config.defaultIcon}\r\n      />\r\n      <div className=\"info\">\r\n        <div>\r\n          <span className=\"header\">{voteAverage}</span>\r\n          <span className=\"subheader\">/10</span>\r\n        </div>\r\n        <div className=\"flex\">\r\n          <span\r\n            className=\"header mr-8 hover-pointer\"\r\n            onClick={() => handleTitleOnClick(id)}\r\n          >\r\n            {title}\r\n          </span>\r\n          <span className=\"minitext\">\r\n            <ul className=\"horizontal\">\r\n              {genre.map((g) => (\r\n                <li>{g.name}</li>\r\n              ))}\r\n            </ul>\r\n          </span>\r\n        </div>\r\n        <div\r\n          className=\"subheader pv-1 hover-pointer\"\r\n          onClick={() => handleTrailerOnClick()}\r\n        >\r\n          Watch Trailer\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TrendingItemCard;\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nimport \"./TrendingList.css\";\r\nimport \"./components/TrendingItemCard.css\";\r\nimport TrendingItemCard from \"./components/TrendingItemCard\";\r\n\r\nconst TrendingList = (props) => {\r\n  const { trendingMovieList, trendingTVList } = props;\r\n\r\n  return (\r\n    <div className=\"background\">\r\n      <Grid container className=\"grid-container\">\r\n        <Grid sm={6}>\r\n          <span className=\"header\">Trending Movies</span>\r\n          {trendingMovieList.map((item) => (\r\n            <TrendingItemCard\r\n              title={item.title}\r\n              id={item.id}\r\n              voteAverage={item.vote_average}\r\n              posterPath={item.backdrop_path}\r\n              mediaType={item.media_type}\r\n              genre={item.genre}\r\n            />\r\n          ))}\r\n        </Grid>\r\n        <Grid sm={6}>\r\n          <span className=\"header\">Trending TV Show</span>\r\n          {trendingTVList.map((item) => (\r\n            <TrendingItemCard\r\n              title={item.name}\r\n              id={item.id}\r\n              voteAverage={item.vote_average}\r\n              posterPath={item.backdrop_path}\r\n              mediaType={item.media_type}\r\n              genre={item.genre}\r\n            />\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrendingList;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport config from \"./config\";\r\nimport * as services from \"./services/services\";\r\nimport TrendingList from \"./trendingList/TrendingList\";\r\n\r\nconst App = () => {\r\n  const [trendingMovieList, setTrendingMovieList] = useState([]);\r\n  const [trendingTVList, setTrendingTVList] = useState([]);\r\n  const [isError, setIsError] = useState(false);\r\n\r\n  const addGenreNames = (listData, genres) => {\r\n    const newList = listData.map((item) => {\r\n      const genre = item.genre_ids.map((g) => {\r\n        return genres.find((t) => t.id == g);\r\n      });\r\n      return { ...item, genre };\r\n    });\r\n    return newList;\r\n  };\r\n\r\n  async function fetchTrendingList() {\r\n    try {\r\n      setIsError(false);\r\n      const movieGenres = await services.fetchMovieGenre();\r\n      const tvGenres = await services.fetchTVGenre();\r\n\r\n      const movieData = await services.fetchMovieList();\r\n      const tvData = await services.fetchTVList();\r\n\r\n      setTrendingMovieList(addGenreNames(movieData, movieGenres));\r\n      setTrendingTVList(addGenreNames(tvData, tvGenres));\r\n    } catch (error) {\r\n      setIsError(true);\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchTrendingList();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {!isError ? (\r\n        <TrendingList\r\n          trendingMovieList={trendingMovieList}\r\n          trendingTVList={trendingTVList}\r\n        />\r\n      ) : (\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <img width={800} src={config.notFoundImage} />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}