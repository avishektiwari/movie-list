{"version":3,"sources":["reportWebVitals.js","config.js","services/http.js","movieList/components/MovieCard.js","movieList/MovieList.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","baseURL","imdbTitleURL","youtube","trending","tvShow","movie","movieGenre","tvGenre","headers","Authorization","fetchMovieList","a","data","axios","get","config","res","results","fetchMovie","movieId","pinterpolate","fetchTVShows","tvId","fetchMovieGenre","genres","fetchTVGenre","MovieCard","props","title","voteAverage","posterPath","id","mediaType","genre","imageUrl","handleTitleOnClick","window","open","imdb_id","homepage","youtubeSearch","URL","searchParams","set","Card","className","style","backgroundColor","onClick","src","map","g","name","handleTrailerOnClick","MovieList","useState","trendingList","seTrendingList","setGenres","services","movieGenres","tvGenres","concat","movies","item","genre_ids","find","t","useEffect","fetchTrendingList","movieList","filter","media_type","tvList","Grid","container","sm","vote_average","backdrop_path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3314084a.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const API_TOKEN =\r\n  \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIwMTI2YmQ4ODBkZTkxN2QzMzhkOTg0ZDQyN2E0YzcxMSIsInN1YiI6IjVmMzhkYzM2YTNiNWU2MDAzN2ViYjFhMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.8paaOERuOPGEm5t2ZFc3JPpwdHJbhlW6XLdazM2yRW0\";\r\nexport const baseURL = \"https://api.themoviedb.org/3/\";\r\nexport const imageBaseURL = \"https://image.tmdb.org/t/p/w780\";\r\nexport const imdbTitleURL = \"https://www.imdb.com/title/\";\r\nexport const youtube = \"https://www.youtube.com/results/\";\r\nexport const trending = \"trending/all/day\";\r\nexport const tvShow = \"tv/:tvId\";\r\nexport const movie = \"movie/:movieId\";\r\nexport const movieGenre = \"genre/movie/list\";\r\nexport const tvGenre = \"genre/tv/list\";\r\n","import axios from \"axios\";\r\nimport * as config from \"../config\";\r\nimport pinterpolate from \"pinterpolate\";\r\n\r\nconst headers = {\r\n  Authorization: config.API_TOKEN,\r\n};\r\n\r\nexport async function fetchMovieList() {\r\n  let data = [];\r\n  await axios.get(config.baseURL + config.trending, { headers }).then((res) => {\r\n    data = res.data.results;\r\n  });\r\n  return data;\r\n}\r\n\r\nexport async function fetchMovie(movieId) {\r\n  let data = [];\r\n  await axios\r\n    .get(pinterpolate(config.baseURL + config.movie, { movieId }), { headers })\r\n    .then((res) => {\r\n      data = res.data;\r\n    });\r\n  return data;\r\n}\r\n\r\nexport async function fetchTVShows(tvId) {\r\n  let data = [];\r\n  await axios\r\n    .get(pinterpolate(config.baseURL + config.tvShow, { tvId }), { headers })\r\n    .then((res) => {\r\n      data = res.data;\r\n    });\r\n  return data;\r\n}\r\n\r\nexport async function fetchMovieGenre() {\r\n  let data = [];\r\n  await axios\r\n    .get(config.baseURL + config.movieGenre, { headers })\r\n    .then((res) => {\r\n      data = res.data.genres;\r\n    });\r\n  return data;\r\n}\r\n\r\nexport async function fetchTVGenre() {\r\n  let data = [];\r\n  await axios.get(config.baseURL + config.tvGenre, { headers }).then((res) => {\r\n    data = res.data.genres;\r\n  });\r\n  return data;\r\n}\r\n","import React from \"react\";\r\nimport { Card } from \"@material-ui/core\";\r\n\r\nimport \"./MovieCard.css\";\r\nimport * as config from \"../../config\";\r\nimport { fetchMovie, fetchTVShows } from \"../../services/http\";\r\n\r\nconst MovieCard = (props) => {\r\n  const { title, voteAverage, posterPath, id, mediaType, genre } = props;\r\n\r\n  const imageUrl = config.imageBaseURL + posterPath;\r\n\r\n  async function handleTitleOnClick(id) {\r\n    if (mediaType === \"movie\") {\r\n      const data = await fetchMovie(id);\r\n      window.open(config.imdbTitleURL + data.imdb_id);\r\n    } else if (mediaType === \"tv\") {\r\n      const data = await fetchTVShows(id);\r\n      window.open(data.homepage);\r\n    }\r\n  }\r\n\r\n  async function handleTrailerOnClick() {\r\n    const youtubeSearch = new URL(config.youtube);\r\n    youtubeSearch.searchParams.set(\"search_query\", title);\r\n    window.open(youtubeSearch);\r\n  }\r\n\r\n  return (\r\n    <Card className=\"card\" style={{ backgroundColor: \"#636060\" }}>\r\n      <img\r\n        className=\"thumbnail hover-pointer\"\r\n        onClick={() => handleTitleOnClick(id)}\r\n        src={imageUrl || \"https://i.imgur.com/LdV1hb0.png\"}\r\n      />\r\n      <div className=\"info\">\r\n        <div>\r\n          <span className=\"header\">{voteAverage}</span>\r\n          <span className=\"subheader\">/10</span>\r\n        </div>\r\n        <div className=\"flex\">\r\n          <span\r\n            className=\"header mr-8 hover-pointer\"\r\n            onClick={() => handleTitleOnClick(id)}\r\n          >\r\n            {title}\r\n          </span>\r\n          <span className=\"minitext\">\r\n            <ul className=\"horizontal\">\r\n              {genre.map((g) => (\r\n                <li>{g.name}</li>\r\n              ))}\r\n            </ul>\r\n          </span>\r\n        </div>\r\n        <div\r\n          className=\"subheader pv-1 hover-pointer\"\r\n          onClick={() => handleTrailerOnClick()}\r\n        >\r\n          Watch Trailer\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport \"./MovieList.css\";\r\nimport \"./components/MovieCard.css\";\r\nimport MovieCard from \"./components/MovieCard\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nimport * as services from \"../services/http\";\r\n\r\nconst MovieList = () => {\r\n  const [trendingList, seTrendingList] = useState([]);\r\n  const [genres, setGenres] = useState([]);\r\n  const movie = [\r\n    { name: \"This\", overview: \"that\" },\r\n    { name: \"This\", overview: \"that\" },\r\n    { name: \"Thisis\", overview: \"that\" },\r\n  ];\r\n\r\n  async function fetchTrendingList() {\r\n    const movieGenres = await services.fetchMovieGenre();\r\n    const tvGenres = await services.fetchTVGenre();\r\n    const genres = movieGenres.concat(tvGenres);\r\n\r\n    const data = await services.fetchMovieList();\r\n\r\n    setGenres(genres);\r\n    const movies = data.map((item) => {\r\n      const genre = item.genre_ids.map((g) => {\r\n        return genres.find((t) => t.id == g);\r\n      });\r\n      return { ...item, genre };\r\n    });\r\n    seTrendingList(movies);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchTrendingList();\r\n  }, []);\r\n\r\n  const movieList = trendingList.filter((item) => item.media_type === \"movie\");\r\n  const tvList = trendingList.filter((item) => item.media_type === \"tv\");\r\n\r\n  return (\r\n    <div className=\"background\">\r\n      <Grid container className=\"grid-container\">\r\n        <Grid sm={6}>\r\n          <span className=\"header\">Trending TV Shows</span>\r\n          {movieList.map((item) => (\r\n            <MovieCard\r\n              title={item.title}\r\n              id={item.id}\r\n              voteAverage={item.vote_average}\r\n              posterPath={item.backdrop_path}\r\n              mediaType={item.media_type}\r\n              genre={item.genre}\r\n            />\r\n          ))}\r\n        </Grid>\r\n        <Grid sm={6}>\r\n          <span className=\"header\">Trending Movies</span>\r\n          {tvList.map((item) => (\r\n            <MovieCard\r\n              title={item.name}\r\n              id={item.id}\r\n              voteAverage={item.vote_average}\r\n              posterPath={item.backdrop_path}\r\n              mediaType={item.media_type}\r\n              genre={item.genre}\r\n            />\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport MovieList from \"./movieList/MovieList\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <MovieList />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}